{"version":3,"sources":["configuration.ts","dataProvider/api.ts","services/accountService/accountService.ts","services/ServicesContext.tsx","components/Layout.tsx","pages/SignIn/index.tsx","pages/SignUp/index.tsx","components/grid/ResultGrid.tsx","components/MainWindow.tsx","pages/Home/index.tsx","Router/index.tsx","App.tsx","index.js"],"names":["Routes","config","ErrorCode","customFetch","relativeUrl","body","method","a","isFile","fetch","headers","getHeaders","JSON","stringify","response","status","window","accountService","currentToken","logout","document","location","reload","token","fetchPost","fetchGet","sendGetRequest","path","executeRequest","sendPostRequest","payload","request","json","signin","login","password","signup","repeatedPassword","loadQuotes","start","end","order","orderBy","AccountService","tokenName","getToken","localStorage","getItem","setToken","value","setItem","deleteToken","removeItem","this","signIn","email","api","result","handleResult","signUp","succeeded","errorMessage","undefined","data","setCurrentToken","isTokenExist","deleteCurrentToken","makeAutoObservable","ServicesContext","React","createContext","ServicesContextProvider","Provider","useStyles","makeStyles","theme","toolBar","backgroundColor","palette","primary","dark","justifyContent","content","margin","layout","height","width","display","zIndex","position","minWidth","minHeight","flexDirection","observer","props","useContext","classes","history","useHistory","tokenExist","className","AppBar","Toolbar","Typography","variant","Button","color","onClick","e","push","children","paper","marginTop","spacing","alignItems","avatar","secondary","main","form","submit","link","cursor","useState","setEmail","setPassword","error","setError","handleSubmit","event","preventDefault","home","Container","component","maxWidth","CssBaseline","Avatar","noValidate","onSubmit","Grid","container","item","xs","TextField","required","fullWidth","onChange","target","id","label","name","autoComplete","type","disabled","gutterBottom","Link","emailValidationString","setRepeatedPassword","useEffect","inputEmail","emailError","test","String","toLowerCase","validateEmail","validatePassword","passwordError","href","columns","field","headerName","renderCell","params","src","sortable","valueFormatter","Intl","DateTimeFormat","day","month","year","minute","hour","hour12","format","Date","ResultGrid","rows","setRows","page","setPage","loading","setLoading","rowCount","setRowCount","sort","sortModel","setSortModel","fieldName","charAt","toUpperCase","slice","resultData","entities","map","logo","coinMarketCapId","count","style","pageSize","pagination","disableSelectionOnClick","paginationMode","onPageChange","onSortModelChange","tabPanel","tab","border","WebkitBorderBottomRightRadius","root","boxShadow","tabsContainer","MainWindow","tabs","exact","SignIn","SignUp","Home","AuthenticatedRoute","rest","render","to","pathname","search","UnauthenticatedRoute","createTheme","light","contrastText","ThemeProvider","Layout","Router","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","basename","App"],"mappings":"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","file":"static/js/main.46629e38.chunk.js","sourcesContent":["const baseUrl = \"/api\";\r\nconst signIn = baseUrl + \"/account/signin\";\r\nconst signUp = baseUrl + \"/account/signup\";\r\nconst logoutUrl = baseUrl + \"/account/signout\";\r\n\r\nexport const config = {\r\n  baseUrl: baseUrl,\r\n  signIn: signIn,\r\n  signUp: signUp,\r\n  logoutUrl: logoutUrl,\r\n};\r\n\r\nexport enum Routes {\r\n  home = \"/\",\r\n  signIn = \"/signin\",\r\n  signUp = \"/signup\",\r\n}\r\n","import { config } from \"../configuration\";\r\n\r\nconst customFetch = async (\r\n  relativeUrl: string,\r\n  body: any,\r\n  method: string,\r\n  isFile = false\r\n) => {\r\n  const response = await fetch(config.baseUrl + relativeUrl, {\r\n    method,\r\n    headers: getHeaders(isFile),\r\n    body: body == null ? null : isFile ? body : JSON.stringify(body),\r\n  });\r\n\r\n  // @ts-ignore\r\n  if (response.status === 401 && window.accountService.currentToken) {\r\n    // @ts-ignore\r\n    window.accountService.logout();\r\n    document.location.reload();\r\n  }\r\n\r\n  return response;\r\n};\r\n\r\nconst getHeaders = (isFile: boolean) => {\r\n  const headers: Headers = {};\r\n  // @ts-ignore\r\n  const token = window.accountService.currentToken;\r\n  if (token != null) headers[\"Authorization\"] = `Bearer ${token}`;\r\n\r\n  if (!isFile) headers[\"Content-Type\"] = \"application/json\";\r\n\r\n  return headers;\r\n};\r\n\r\nconst fetchPost = async (relativeUrl: string, body?: object, isFile: boolean = false) => await customFetch(relativeUrl, body, \"POST\", isFile);\r\n\r\nconst fetchGet = async (relativeUrl: string) => await customFetch(relativeUrl, null, \"GET\");\r\n\r\nconst sendGetRequest = async <T>(path: string): Promise<T | null> => {\r\n  return await executeRequest(async () => await fetchGet(path)) as T;\r\n};\r\n\r\nconst sendPostRequest = async <T>(path: string, payload?: any): Promise<Response<T> | null> => {\r\n  return await executeRequest(async () => await fetchPost(path, payload));\r\n};\r\n\r\nconst executeRequest = async (request: () => Promise<globalThis.Response>) => {\r\n  try {\r\n    const response = await request();\r\n    return (await response.json());\r\n  } catch {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst signin = async (login: string, password: string) => {\r\n  return await sendPostRequest<Sign>(\"/account/signin\", { login, password });\r\n};\r\n\r\nconst signup = async (login: string, password: string, repeatedPassword: string) => {\r\n  return await sendPostRequest<Sign>(\"/account/signup\", { login, password, repeatedPassword });\r\n};\r\n\r\nconst loadQuotes = async (start: number, end: number, order: string | undefined, orderBy: number | undefined) => {\r\n  if (!order)\r\n    return await sendGetRequest<GridResult>(`/cryptocurrency?start=${start}&end=${end}\"`,);\r\n\r\n  return await sendGetRequest<GridResult>(`/cryptocurrency?start=${start}&end=${end}&order=${order}&orderBy=${orderBy}`,);\r\n};\r\n\r\nexport default {\r\n  signin,\r\n  signup,\r\n  loadQuotes\r\n};\r\n\r\ninterface Headers {\r\n  [key: string]: string;\r\n}\r\n\r\nexport type Response<TInternalData> = {\r\n  succeeded: boolean;\r\n  errorMessage?: string;\r\n  errorCode?: ErrorCode;\r\n  data?: TInternalData;\r\n};\r\n\r\n\r\nexport type Sign = {\r\n  token: string;\r\n};\r\n\r\nexport type GridResult = {\r\n  count: number,\r\n  entities: Array<any>\r\n};\r\n\r\nenum ErrorCode {\r\n  GenericError,\r\n  Unauthorized,\r\n  Forbidden,\r\n}\r\n","import api, { Response, Sign } from \"../../dataProvider/api\";\r\nimport { makeAutoObservable } from \"mobx\";\r\n\r\nexport default class AccountService {\r\n  constructor () {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  tokenName = \"cqf-token\";\r\n\r\n  getToken = () => localStorage.getItem(this.tokenName);\r\n  setToken = (value: string) => localStorage.setItem(this.tokenName, value);\r\n  deleteToken = () => localStorage.removeItem(this.tokenName);\r\n\r\n  currentToken: string | null = this.getToken();\r\n\r\n  signIn = async (email: string, password: string): Promise<string | null> => {\r\n    const result = await api.signin(email, password);\r\n    return this.handleResult(result);\r\n  };\r\n\r\n  signUp = async (email: string, password: string, repeatedPassword: string): Promise<string | null> => {\r\n    const result = await api.signup(email, password, repeatedPassword);\r\n    return await this.handleResult(result);\r\n  };\r\n\r\n  handleResult = async (result: Response<Sign> | null\r\n    )=> {\r\n    if (!result?.succeeded) {\r\n      return result?.errorMessage ?? null;\r\n    }\r\n\r\n    const token = result.data?.token;\r\n\r\n    if (token === undefined)\r\n      return \"Error\";\r\n    \r\n    this.setToken(token);\r\n    this.setCurrentToken(token);\r\n\r\n    return null;\r\n  };\r\n\r\n  isTokenExist = () => {\r\n    return this.currentToken !== null;\r\n  };\r\n\r\n  logout = () => {\r\n    this.deleteToken();\r\n    this.deleteCurrentToken();\r\n  };\r\n\r\n  deleteCurrentToken = () => (this.currentToken = null);\r\n  setCurrentToken = (token: string) => (this.currentToken = token);\r\n}\r\n","import React from \"react\";\r\nimport AccountService from \"./accountService/accountService\";\r\n\r\nconst ServicesContext = React.createContext<Context>(\r\n  {\r\n    accountService: new AccountService()\r\n  }\r\n);\r\nexport const ServicesContextProvider = ServicesContext.Provider;\r\nexport default ServicesContext;\r\n\r\nexport interface Context {\r\n  accountService: AccountService\r\n}","import {\r\n  AppBar,\r\n  Button,\r\n  makeStyles,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { observer } from \"mobx-react\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Routes } from \"../configuration\";\r\nimport ServicesContext, { Context } from \"../services/ServicesContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolBar: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    justifyContent: \"space-between\",\r\n  },\r\n  content: {\r\n    margin: \"50px 50px\",\r\n  },\r\n  layout: {\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    zIndex: 1,\r\n    position: \"relative\",\r\n    minWidth: \"auto\",\r\n    minHeight: \"100vh\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"white\",\r\n  },\r\n}));\r\n\r\nexport default observer((props: any) => {\r\n  const accountService = useContext<Context>(ServicesContext).accountService;\r\n\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  let tokenExist = accountService.isTokenExist();\r\n\r\n  return (\r\n    <div className={classes.layout}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.toolBar}>\r\n          <Typography variant=\"h6\">Crypto Quotes</Typography>\r\n          {tokenExist ? (\r\n            <Button\r\n              color=\"inherit\"\r\n              onClick={(e) => {\r\n                accountService.logout();\r\n                history.push(Routes.signIn);\r\n              }}\r\n            >\r\n              Logout\r\n            </Button>\r\n          ) : null}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n  );\r\n});\r\n","import React, { useContext, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { Routes } from \"../../configuration\";\r\nimport ServicesContext, { Context } from \"../../services/ServicesContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  link: {\r\n    cursor: \"pointer\"\r\n  }\r\n}));\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [email, setEmail] = useState<string | undefined>();\r\n  const [password, setPassword] = useState<string | undefined>();\r\n  const [error, setError] = useState<string>();\r\n  const accountService = useContext<Context>(ServicesContext).accountService;\r\n\r\n  const isDisabled = (): boolean => {\r\n    if (email && password) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    const result = await accountService.signIn(email!, password!);\r\n    if (result !== null) {\r\n      setError(result);\r\n      return;\r\n    }\r\n\r\n    history.push(Routes.home);\r\n  };\r\n\r\n  const redirectToSignUp = () => {\r\n    history.push(Routes.signUp);\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                id=\"email\"\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={isDisabled()}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Typography variant=\"caption\" display=\"block\" gutterBottom color=\"error\">\r\n                {error}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Link variant=\"body2\" onClick={redirectToSignUp} className={classes.link}>\r\n                Don't have an account? Sign Up\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Routes } from \"../../configuration\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ServicesContext, { Context } from \"../../services/ServicesContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst emailValidationString =\r\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState<string | undefined>(\"\");\r\n  const [password, setPassword] = useState<string | undefined>(\"\");\r\n  const [repeatedPassword, setRepeatedPassword] = useState<string | undefined>(\"\");\r\n  const [error, setError] = useState<string | undefined>();\r\n  const history = useHistory();\r\n  const accountService = useContext<Context>(ServicesContext).accountService;\r\n\r\n  const isDisabled = (): boolean => {\r\n    const canSubmit =\r\n      email && password && password === repeatedPassword && error === undefined;\r\n    if (canSubmit) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    const result = await accountService.signUp(email!, password!, repeatedPassword!);\r\n    if (result !== null) {\r\n      setError(result);\r\n      return;\r\n    }\r\n\r\n    history.push(Routes.home);\r\n  };\r\n\r\n  useEffect(() => {\r\n    validateEmail(email);\r\n  }, [email]);\r\n\r\n  useEffect(() => {\r\n    validatePassword(password, repeatedPassword);\r\n  }, [password, repeatedPassword]);\r\n\r\n  const handleInputEmail = (inputEmail: string) => {\r\n    setEmail(inputEmail);\r\n    setError(undefined);\r\n  };\r\n\r\n  function validateEmail(inputEmail: string | undefined) {\r\n    if (inputEmail === \"\")\r\n      return;\r\n\r\n    if (inputEmail === undefined) {\r\n      setError(emailError);\r\n      return;\r\n    }\r\n\r\n    const validationResult = emailValidationString.test(String(inputEmail).toLowerCase());\r\n    \r\n    if (!validationResult) {\r\n      setError(emailError);\r\n      return;\r\n    }\r\n  }\r\n\r\n  const validatePassword = (password: string | undefined, repeatedPassword: string | undefined) => {\r\n    if (password === undefined || repeatedPassword === undefined || password !== repeatedPassword) {\r\n      setError(passwordError);\r\n    } else {\r\n      setError(undefined);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                onChange={(e) => handleInputEmail(e.target.value)}\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                onChange={(e) => setRepeatedPassword(e.target.value)}\r\n                name=\"repeatpassword\"\r\n                label=\"Repeat Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n            disabled={isDisabled()}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              {error && (\r\n                <Typography\r\n                  variant=\"caption\"\r\n                  display=\"block\"\r\n                  gutterBottom\r\n                  color=\"error\"\r\n                >\r\n                  {error}\r\n                </Typography>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Link href=\"/signin\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst emailError = \"Email is invalid.\";\r\nconst passwordError = \"Passwords are different\";","import React, { useEffect, useState } from \"react\";\r\nimport { DataGrid, GridColDef, GridRowData, GridSortModel } from \"@material-ui/data-grid\";\r\nimport api, { GridResult } from \"../../dataProvider/api\";\r\n\r\nconst ResultGrid = () => {\r\n  const [rows, setRows] = useState<GridRowData[]>([]);\r\n  const [page, setPage] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [rowCount, setRowCount] = useState(0);\r\n  const [sortModel, setSortModel] = useState<GridSortModel>([{field: \"marketCap\", sort: \"asc\"}]);\r\n\r\n  const handlePageChange = (page: number) => {\r\n    setPage(page);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n        setLoading(true);\r\n        const fieldName = sortModel[0] ? sortModel[0].field.charAt(0).toUpperCase() + sortModel[0].field.slice(1) : undefined;\r\n        const sort =  sortModel[0] ? sortModel[0].sort === \"asc\" ? 0 : 1 : undefined;\r\n        \r\n        const resultData = await api.loadQuotes((page * 10), (page * 10 + 10), fieldName, sort);\r\n\r\n        if (resultData) {\r\n          setRows(resultData.entities.map(e => ({logo: `https://s2.coinmarketcap.com/static/img/coins/32x32/${e.coinMarketCapId}.png`, ...e})));\r\n          setRowCount(resultData.count);\r\n        }\r\n        setLoading(false);\r\n    })();\r\n  }, [page, sortModel]);\r\n  \r\n  return (\r\n    <div style={{ height: \"647px\", width: \"100%\" }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={10}\r\n        rowCount={rowCount}\r\n        pagination\r\n        disableSelectionOnClick\r\n        paginationMode=\"server\"\r\n        onPageChange={handlePageChange}\r\n        loading={loading}\r\n        onSortModelChange={e => setSortModel(e)}\r\n        sortModel={sortModel}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst columns: GridColDef[] = [ \r\n  { field: \"name\", width: 250, headerName: \"Название\" }, \r\n  { field: \"symbol\", width: 130, headerName: \"Символ\" },\r\n  { field: \"price\", width: 220, headerName: \"Текущая цена в USD\" },\r\n  { \r\n    field: \"logo\", \r\n    width: 130, \r\n    headerName: \"Логотип\",\r\n    renderCell: (params) => { \r\n      return (\r\n        <img src={params.value as string}></img >\r\n      );\r\n    },\r\n    sortable: false\r\n  },\r\n  { field: \"percentChangeOneHour\", width: 200, headerName: \"Изменение за час\" }, \r\n  { field: \"percentChangeTwentyFourHours\", width: 230, headerName: \"Изменение за 24 часа\" }, \r\n  { field: \"marketCap\", width: 230, headerName: \"Капитализации в USD\" }, \r\n  { \r\n    field: \"lastUpdated\", \r\n    width: 260, \r\n    headerName: \"Время обновления данных\", \r\n    valueFormatter: (params) => \r\n      new Intl.DateTimeFormat('ru', \r\n      { \r\n        day: \"2-digit\", \r\n        month: \"2-digit\", \r\n        year: \"numeric\", \r\n        minute: \"2-digit\", \r\n        hour: \"2-digit\", \r\n        hour12: false \r\n      }).format(new Date(params.value as string)) }, \r\n];\r\n\r\nexport default ResultGrid;\r\n","import React, { useContext, useState, FC } from \"react\";\r\nimport { Box, makeStyles, Tab, Tabs, Typography } from \"@material-ui/core\";\r\nimport ServicesContext, { Context } from \"../services/ServicesContext\";\r\nimport ResultGrid from \"./grid/ResultGrid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  tabPanel: {\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  tab: {\r\n    border: `2px solid ${theme.palette.primary.main}`,\r\n    WebkitBorderBottomRightRadius: \"5px\",\r\n    minHeight: \"77vh\",\r\n  },\r\n  root: {\r\n    display: \"flex\",\r\n    boxShadow: \"0 0 10px rgba(0,0,0,0.5)\",\r\n  },\r\n  tabsContainer: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst MainWindow: FC<React.HTMLAttributes<HTMLDivElement>> =\r\n  (): JSX.Element => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <ResultGrid />\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default MainWindow;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport MainWindow from \"../../components/MainWindow\";\r\n\r\nconst useStyles = makeStyles({\r\n  tabs: {},\r\n});\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <MainWindow className={classes.tabs} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { SignIn, SignUp, Home } from \"../pages\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Routes } from \"../configuration\";\r\nimport ServicesContext, { Context } from \"../services/ServicesContext\";\r\n\r\nexport default function () {\r\n  return (\r\n    <Switch>\r\n      <UnauthenticatedRoute path={Routes.signIn} exact={true}>\r\n        <SignIn />\r\n      </UnauthenticatedRoute>\r\n      <UnauthenticatedRoute path={Routes.signUp} exact={true}>\r\n        <SignUp />\r\n      </UnauthenticatedRoute>\r\n      <AuthenticatedRoute path={Routes.home} exact={true}>\r\n        <Home />\r\n      </AuthenticatedRoute>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nconst AuthenticatedRoute = (props: any) => {\r\n  const { children, ...rest }: { children: JSX.Element } = props;\r\n  const accountService = useContext<Context>(ServicesContext).accountService;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        accountService.isTokenExist() ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={`${Routes.signIn}?redirect=${props.location.pathname}${props.location.search}`}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst UnauthenticatedRoute = (props: any) => {\r\n  const { children, ...rest }: { children: JSX.Element } = props;\r\n  const accountService = useContext<Context>(ServicesContext).accountService;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !accountService.isTokenExist() ? children : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n","import { createTheme, ThemeProvider } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Layout from \"./components/Layout\";\r\nimport Router from \"./Router\";\r\nimport AccountService from \"./services/accountService/accountService\";\r\nimport { ServicesContextProvider } from \"./services/ServicesContext\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#4dabf5\",\r\n      main: \"#2196f3\",\r\n      dark: \"#1769aa\",\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      light: \"#f73378\",\r\n      main: \"#f50057\",\r\n      dark: \"#ab003c\",\r\n      contrastText: \"#000\",\r\n    },\r\n  },\r\n});\r\n\r\n// @ts-ignore\r\nwindow.accountService = new AccountService();\r\n\r\nexport default () => {\r\n  return (\r\n    <ServicesContextProvider value={\r\n      {\r\n        // @ts-ignore\r\n        accountService: window.accountService\r\n      }\r\n    }>\r\n      <ThemeProvider theme={theme}>\r\n        <Layout>\r\n          <Router />\r\n        </Layout>\r\n      </ThemeProvider>\r\n    </ServicesContextProvider>\r\n  );\r\n};\r\n","import React, { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport AccountService from \"./services/accountService/accountService\";\r\n//import registerServiceWorker from './registerServiceWorker';\r\n\r\nconst baseUrl = document.getElementsByTagName(\"base\")[0].getAttribute(\"href\");\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\nwindow.accountService = new AccountService();\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <BrowserRouter basename={baseUrl}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n\r\n// Uncomment the line above that imports the registerServiceWorker function\r\n// and the line below to register the generated service worker.\r\n// By default create-react-app includes a service worker to improve the\r\n// performance of the application by caching static assets. This service\r\n// worker can interfere with the Identity UI, so it is\r\n// disabled by default when Identity is being used.\r\n//\r\n//registerServiceWorker();\r\n"],"sourceRoot":""}